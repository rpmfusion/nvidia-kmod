diff -uNrp a/kernel-open/nvidia/nv-dmabuf.c b/kernel-open/nvidia/nv-dmabuf.c
--- a/kernel-open/nvidia/nv-dmabuf.c	2025-06-10 19:53:15.000000000 +0100
+++ b/kernel-open/nvidia/nv-dmabuf.c	2025-06-28 16:34:51.004963895 +0100
@@ -837,12 +837,10 @@ nv_dma_buf_map(
     // PCIe mapping, importers must be able to handle peer MMIO resources
     // not backed by struct page.
     //
-#if defined(NV_DMA_BUF_HAS_DYNAMIC_ATTACHMENT) && \
-    defined(NV_DMA_BUF_ATTACHMENT_HAS_PEER2PEER)
+#if defined(NV_DMA_BUF_ATTACHMENT_HAS_PEER2PEER)
     if (((!priv->nv->coherent) ||
          (priv->mapping_type == NV_DMABUF_EXPORT_MAPPING_TYPE_FORCE_PCIE)) &&
-        dma_buf_attachment_is_dynamic(attachment) &&
-        !attachment->peer2peer)
+        !!attachment->importer_ops && !attachment->peer2peer)
     {
         nv_printf(NV_DBG_ERRORS,
                   "NVRM: failed to map dynamic attachment with no P2P support\n");
diff -uNrp a/kernel-open/nvidia-uvm/uvm_ats_sva.h b/kernel-open/nvidia-uvm/uvm_ats_sva.h
--- a/kernel-open/nvidia-uvm/uvm_ats_sva.h	2025-06-10 20:41:41.000000000 +0100
+++ b/kernel-open/nvidia-uvm/uvm_ats_sva.h	2025-06-28 16:35:01.464401472 +0100
@@ -28,6 +28,7 @@
 #include "uvm_forward_decl.h"
 
 #include <linux/iommu.h>
+#include <linux/version.h>
 
 // For ATS support on aarch64, arm_smmu_sva_bind() is needed for
 // iommu_sva_bind_device() calls. Unfortunately, arm_smmu_sva_bind() is not
@@ -44,7 +45,7 @@
 // 701fac40384f07197b106136012804c3cae0b3de (02/15/2022) removed ioasid_get()
 // and added mm_pasid_drop().
     #if UVM_CAN_USE_MMU_NOTIFIERS() && (defined(NV_IOASID_GET_PRESENT) || defined(NV_MM_PASID_DROP_PRESENT))
-        #if defined(CONFIG_IOMMU_SVA)
+        #if defined(CONFIG_IOMMU_SVA) && LINUX_VERSION_CODE < KERNEL_VERSION(6, 16, 0)
             #define UVM_ATS_SVA_SUPPORTED() 1
         #else
             #define UVM_ATS_SVA_SUPPORTED() 0
